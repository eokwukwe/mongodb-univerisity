use('aggregations')

// Chapter 1, Lab - $match
// db.movies.aggregate(
//   [{ 
//     $match: { 
//         "imdb.rating": {$gte: 7}, 
//         genres: {$nin: ["Crime", "Horror"]}, 
//         rated: {$in: ["PG", "G"]}, 
//         languages: {$all: ["English", "Japanese"]} 
//       },
//     $project: {
//       _id: 0,
//       title: 1,
//       rated: 1
//     }
//   }]
// ).itcount()

// Chapter 1. Lab - Computing Fields
// db.movies.aggregate([
//   {
//     $match: {
//       title: {
//         $type: "string"
//       }
//     }
//   },
//   {
//     $project: {
//       title: { $split: ["$title", " "] },
//       _id: 0
//     }
//   },
//   {
//     $match: {
//       title: { $size: 1 }
//     }
//   }
// ]).itcount()

// Chapter 1. Optional Lab - Expressions with $project
db.movies.aggregate([
  {
    // filter out documents that are not an array or have an empty 
    // array for the fields we are interested in
    $match: {
      cast: { $elemMatch: { $exists: true } },
      directors: { $elemMatch: { $exists: true } },
      writers: { $elemMatch: { $exists: true } }
    }
  },
  {
    // removing the _id field and retaining both the directors and cast fields. We replace the existing writers field with a new computed value, cleaning up the strings within writers
    $project: {
      _id: 0,
      cast: 1,
      directors: 1,
      writers: {
        $map: {
          input: "$writers",
          as: "writer",
          in: {
            $arrayElemAt: [
              {
                $split: ["$$writer", " ("]
              },
              0
            ]
          }
        }
      }
    }
  },
  {
    // compute a new field called labor_of_love that ensures the intersection of cast, writers, and our newly cleaned directors is greater than 0. This definitely means that at least one element in each array is identical! $gt will return true or false.
    $project: {
      labor_of_love: {
        $gt: [
          { $size: { $setIntersection: ["$cast", "$directors", "$writers"] } },
          0
        ]
      }
    }
  },
  {
    // follow with a $match stage, only allowing documents through where labor_of_love is tru
    $match: { labor_of_love: true }
  },
  {
    $count: "labors of love"
  }
])

// or
// {
//     $match: { labor_of_love: true }
//   }
// ]).itcount()
